{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-09-19T07:20:01.593Z",
    "end": "2023-09-19T07:20:11.001Z",
    "duration": 9408,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ce27932-d09c-43b0-9afb-8713528d87e5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "97634e16-4fa0-4fc5-bb3f-9bdfebaf11f0",
          "title": "add todo tests",
          "fullFile": "D:\\Testing\\seleniumDemo\\tests\\firstTest.js",
          "file": "\\tests\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to applicatiom",
              "fullTitle": "add todo tests successfully adds a todo to applicatiom",
              "timedOut": null,
              "duration": 4333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000);\n    //1 - launch the browser\n    let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\"Learn Selenium\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    await driver.quit();",
              "err": {},
              "uuid": "8ded15e4-3c83-445a-9891-a61169d87965",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ded15e4-3c83-445a-9891-a61169d87965"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4333,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "595d98c4-2070-497d-9e77-71d2edf0f51b",
          "title": "add second todo tests",
          "fullFile": "D:\\Testing\\seleniumDemo\\tests\\secondTest.js",
          "file": "\\tests\\secondTest.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"add second todo tests\"",
              "fullTitle": "add second todo tests \"before each\" hook in \"add second todo tests\"",
              "timedOut": null,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "ltCapabilities.capabilities.name = this.currentTest.title;\n\ndriver = new Builder()\n.usingServer(gridUrl)\n.withCapabilities(ltCapabilities.capabilities)\n.build();",
              "err": {},
              "uuid": "5d72788f-2ef6-400f-9581-a87514aed889",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"add second todo tests\"",
              "fullTitle": "add second todo tests \"after each\" hook in \"add second todo tests\"",
              "timedOut": null,
              "duration": 165,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "await driver.quit();",
              "err": {},
              "uuid": "9d5bff13-bcc3-4883-9aa8-6cc5b5159902",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully adds second todo to applicatiom",
              "fullTitle": "add second todo tests successfully adds second todo to applicatiom",
              "timedOut": null,
              "duration": 8820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000)\n    //1 - launch the browser\n    //let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\"Learn Selenium\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    //await driver.quit();",
              "err": {},
              "uuid": "af43322f-047d-4f5d-ab11-fd0a31d47e08",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af43322f-047d-4f5d-ab11-fd0a31d47e08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8820,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "D:/Testing/seleniumDemo/reports",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}