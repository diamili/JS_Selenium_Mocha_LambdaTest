{
  "stats": {
    "suites": 3,
    "tests": 4,
    "passes": 2,
    "pending": 0,
    "failures": 2,
    "start": "2023-09-15T08:27:31.981Z",
    "end": "2023-09-15T08:27:41.779Z",
    "duration": 9798,
    "testsRegistered": 4,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e1abae0d-f1ad-4c2f-8eb4-59889fb9deea",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c172ff09-f6d0-4425-9e3d-b874cde4e931",
          "title": "add second todo tests",
          "fullFile": "D:\\Testing\\seleniumDemo\\tests\\secondTest.js",
          "file": "\\tests\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds second todo to applicatiom",
              "fullTitle": "add second todo tests successfully adds second todo to applicatiom",
              "timedOut": null,
              "duration": 4851,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000)\n    //1 - launch the browser\n    let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\" Selenium\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal ' Selenium'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal ' Selenium'\n    at Context.<anonymous> (tests\\secondTest.js:26:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Learn Selenium\n+  Selenium\n"
              },
              "uuid": "c8f2d9b6-0f90-458a-97f0-289fcd7d3ace",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c8f2d9b6-0f90-458a-97f0-289fcd7d3ace"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4851,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "47dc02bc-494c-4742-8c41-743f5e201210",
          "title": "add todo tests",
          "fullFile": "D:\\Testing\\seleniumDemo\\tests\\firstTest.js",
          "file": "\\tests\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to applicatiom",
              "fullTitle": "add todo tests successfully adds a todo to applicatiom",
              "timedOut": null,
              "duration": 5923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000);\n    //1 - launch the browser\n    let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\"Learn Selenium\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    await driver.quit();",
              "err": {},
              "uuid": "e4bad6b7-9ab2-4c81-bf5c-005a5bc9e203",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4bad6b7-9ab2-4c81-bf5c-005a5bc9e203"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5923,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "8ed8fff4-b0c7-47d9-a959-bbfcd19d4609",
          "title": "add third todo tests",
          "fullFile": "D:\\Testing\\seleniumDemo\\tests\\thirdTest.js",
          "file": "\\tests\\thirdTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds third todo to applicatiom",
              "fullTitle": "add third todo tests successfully adds third todo to applicatiom",
              "timedOut": null,
              "duration": 5958,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000)\n    //1 - launch the browser\n    let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\"Learn Selenium\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    await driver.quit();",
              "err": {},
              "uuid": "575dc69f-3e0c-40dc-9753-0b1d393b059b",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "new second test in third",
              "fullTitle": "add third todo tests new second test in third",
              "timedOut": null,
              "duration": 3292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "this.timeout(15000)\n    //1 - launch the browser\n    let driver = await new Builder().forBrowser(\"firefox\").build();\n    //2 - navigate to our app\n    await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    //3 - add a todo\n    await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n    //5 - asssert - to check that smth is presented on the page\n    let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n        return value\n    });\n    //assert using chai should\n    todoText.should.equal(\"Learn S\")// return the error, becouse the strings do not match\n    //4 - close the browser\n    await driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn S'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn S'\n    at Context.<anonymous> (tests\\thirdTest.js:52:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": "- Learn Selenium\n+ Learn S\n"
              },
              "uuid": "4c0300fd-3e90-46d8-b2d6-3ecce6e4ab45",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "575dc69f-3e0c-40dc-9753-0b1d393b059b"
          ],
          "failures": [
            "4c0300fd-3e90-46d8-b2d6-3ecce6e4ab45"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9250,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "testReport",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "D:/Testing/seleniumDemo/reports",
        "reportFilename": "testReport"
      },
      "version": "6.2.0"
    }
  }
}